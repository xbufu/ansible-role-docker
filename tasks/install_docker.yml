---
- name: Check if Docker already exist
  ansible.builtin.command: 'which docker'
  register: docker_exists
  failed_when: no
  ignore_errors: true
  changed_when: docker_exists.rc != 0

- name: Remove docker if already installed
  when: docker_exists.rc != 0
  block:
    - name: Update aptitude repo and cache on all Debian/Ubuntu boxes
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        autoclean: yes

    - name: Remove old Docker versions
      ansible.builtin.package:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent
        purge: true

- name: Install dependencies
  block:
  - name: Ensure dependencies are installed.
    ansible.builtin.package:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - lsb-release
        - python3-setuptools
        - git
      state: present

  - name: Ensure additional dependencies are installed (on Ubuntu < 20.04 and any other systems).
    ansible.builtin.package:
      name: gnupg2
      state: present
    when: ansible_distribution != 'Ubuntu' or ansible_distribution_version is version('20.04', '<')

  - name: Ensure additional dependencies are installed (on Ubuntu >= 20.04).
    ansible.builtin.package:
      name: gnupg
      state: present
    when: ansible_distribution == 'Ubuntu' or ansible_distribution_version is version('20.04', '>=')

- name: Add docker repository
  block:
  - name: Remove gpg keys if they exist #otherwise GPG doesn't run if file already exists
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/apt/trusted.gpg.d/docker.gpg
      - /etc/apt/trusted.gpg.d/docker.gpg_armored

  - name: Download Docker gpg key
    ansible.builtin.get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /etc/apt/trusted.gpg.d/docker.gpg_armored

  - name: De-Armor Docker GPG key
    ansible.builtin.shell: gpg --dearmor < /etc/apt/trusted.gpg.d/docker.gpg_armored > /etc/apt/trusted.gpg.d/docker.gpg
    args:
      creates: /etc/apt/trusted.gpg.d/docker.gpg
  
  - name: Remove armored key
    ansible.builtin.file:
      path: /etc/apt/trusted.gpg.d/docker.gpg_armored
      state: absent

    #https://git.deuxfleurs.fr/Deuxfleurs/infrastructure/src/commit/7852eef5a6d0eefc5914f178549f6845857a5c49/os/config/roles/common/tasks/docker.yml
  - name: Add Docker's repository to APT sources list
    ansible.builtin.apt_repository:
      repo: "deb [arch={{ architecture_map[ansible_architecture] }} signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      state: present
      filename: docker
      update_cache: true
    vars:
      architecture_map:
        "x86_64": "amd64"
        "aarch64": "arm64"
        "aarch": "arm64"
        "armhf": "armhf"
        "armv7l": "armhf"

- name: Install docker packages
  block:
    - name: Install Docker engine
      ansible.builtin.package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Install Docker Module for Python
      ansible.builtin.pip:
        name: docker
